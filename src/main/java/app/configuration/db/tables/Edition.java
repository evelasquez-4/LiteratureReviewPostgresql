package app.configuration.db.tables;
// Generated Sep 27, 2019, 11:41:57 PM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Edition generated by hbm2java
 */
@Entity
@Table(name = "edition")
public class Edition implements java.io.Serializable {

	private int id;
	private Conference conference;
	private String description;
	private Set<ConferenceEditorial> conferenceEditorials = new HashSet<ConferenceEditorial>(0);
	private Set<ConferencePaper> conferencePapers = new HashSet<ConferencePaper>(0);

	public Edition() {
	}

	public Edition(int id) {
		this.id = id;
	}

	public Edition(int id, Conference conference, String description, Set<ConferenceEditorial> conferenceEditorials,
			Set<ConferencePaper> conferencePapers) {
		this.id = id;
		this.conference = conference;
		this.description = description;
		this.conferenceEditorials = conferenceEditorials;
		this.conferencePapers = conferencePapers;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conference_id")
	public Conference getConference() {
		return this.conference;
	}

	public void setConference(Conference conference) {
		this.conference = conference;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "edition")
	public Set<ConferenceEditorial> getConferenceEditorials() {
		return this.conferenceEditorials;
	}

	public void setConferenceEditorials(Set<ConferenceEditorial> conferenceEditorials) {
		this.conferenceEditorials = conferenceEditorials;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "edition")
	public Set<ConferencePaper> getConferencePapers() {
		return this.conferencePapers;
	}

	public void setConferencePapers(Set<ConferencePaper> conferencePapers) {
		this.conferencePapers = conferencePapers;
	}

}
