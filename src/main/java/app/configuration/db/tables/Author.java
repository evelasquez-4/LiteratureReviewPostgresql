package app.configuration.db.tables;
// Generated Sep 27, 2019, 11:41:57 PM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Author generated by hbm2java
 */
@Entity
@Table(name = "author")
public class Author implements java.io.Serializable {

	private long id;
	private Department department;
	private String names;
	private Date createdAt;
	private String homePage;
	private Set<AuthorPublications> authorPublicationses = new HashSet<AuthorPublications>(0);

	public Author() {
	}

	public Author(long id) {
		this.id = id;
	}

	public Author(long id, Department department, String names, Date createdAt, String homePage,
			Set<AuthorPublications> authorPublicationses) {
		this.id = id;
		this.department = department;
		this.names = names;
		this.createdAt = createdAt;
		this.homePage = homePage;
		this.authorPublicationses = authorPublicationses;
	}
	

	public Author(String names, Date createdAt, String homePage) {
		this.names = names;
		this.createdAt = createdAt;
		this.homePage = homePage;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@Column(name = "names")
	public String getNames() {
		return this.names;
	}

	public void setNames(String names) {
		this.names = names;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", length = 13)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "home_page", length = 200)
	public String getHomePage() {
		return this.homePage;
	}

	public void setHomePage(String homePage) {
		this.homePage = homePage;
	}

	@OneToMany(orphanRemoval=true, cascade=CascadeType.ALL,fetch = FetchType.LAZY, mappedBy = "author")
	public Set<AuthorPublications> getAuthorPublicationses() {
		return this.authorPublicationses;
	}

	public void setAuthorPublicationses(Set<AuthorPublications> authorPublicationses) {
		this.authorPublicationses = authorPublicationses;
	}

}
